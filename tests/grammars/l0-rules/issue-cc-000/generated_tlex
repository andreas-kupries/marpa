# -*- tcl -*-
##
# This template is BSD-licensed.
# (c) 2017 Template - Andreas Kupries http://wiki.tcl.tk/andreas%20kupries
#                                     http://core.tcl.tk/akupries/
##
# (c) <Year> Grammar <Name> By <Writer>
##
##	`marpa::runtime::tcl`-derived Lexer for grammar "<Name>".
##	Generated On <GenerationTime>
##		  By <Operator>
##		 Via <Tool>

package provide <Name> <Version>

# # ## ### ##### ######## #############
## Requisites

package require Tcl 8.5             ;# -- Foundation
package require TclOO               ;# -- Implies Tcl 8.5 requirement.
package require debug               ;# Tracing
package require debug::caller       ;# Tracing
package require marpa::runtime::tcl ;# Engine

# # ## ### ##### ######## #############

debug define <Name>
debug prefix <Name> {[debug caller] | }

# # ## ### ##### ######## #############

oo::class create <Name> {
    superclass marpa::engine::tcl::lex

    # Lifecycle: No constructor needed. No state.
    # All data is embedded as literals into methods

    # Declare the various things needed by the engine for its
    # operation.  To get the information the base class will call on
    # these methods in the proper order. The methods simply return the
    # requested information. Their base-class implementations simply
    # throw errors, thus preventing the construction of an incomplete
    # lexer.
    
    method Characters {} {
	debug.<Name>
	# Literals: The directly referenced (allowed) characters.
	return {
	    {@CHR:<\ud82f>}   \ud82f
	    {@CHR:<\ud804>}   \ud804
	    {@CHR:<\ud834>}   \ud834
	    {@CHR:<\udb40>}   \udb40
	    {@CHR:<\udbbf>}   \udbbf
	    {@CHR:<\udbff>}   \udbff
	    {@CHR:<\udc00>}   \udc00
	}
    }
    
    method Classes {} {
	debug.<Name>
	# Literals: The character classes in use
	return {
	    RAN<d56480-d56508>                                                                                                                                                       {[\udca0-\udcbc]}
	    RAN<d56509-d56690>                                                                                                                                                       {[\udcbd-\udd72]}
	    RAN<d56691-d57343>                                                                                                                                                       {[\udd73-\udfff]}
	    {@^CLS:<\0-\37\42\134\177-\237\255\3000-\3005\3034\3335\3417\4342\14016\20013-\20017\20052-\20056\20140-\20144\20146-\20157\160000-\174377\177377\177771-\177773>.BMP}   {[^\0-\37\42\134\177-\u009f\u00ad\u0600-\u0605\u061c\u06dd\u070f\u08e2\u180e\u200b-\u200f\u202a-\u202e\u2060-\u2064\u2066-\u206f\ue000-\uf8ff\ufeff\ufff9-\ufffb]}
	    {@RAN:<\ud800\ud803>}                                                                                                                                                    {[\ud800-\ud803]}
	    {@RAN:<\ud805\ud82e>}                                                                                                                                                    {[\ud805-\ud82e]}
	    {@RAN:<\ud830\ud833>}                                                                                                                                                    {[\ud830-\ud833]}
	    {@RAN:<\ud835\udb3f>}                                                                                                                                                    {[\ud835-\udb3f]}
	    {@RAN:<\udb41\udb7f>}                                                                                                                                                    {[\udb41-\udb7f]}
	    {@RAN:<\udc00\udc9f>}                                                                                                                                                    {[\udc00-\udc9f]}
	    {@RAN:<\udc02\udc1f>}                                                                                                                                                    {[\udc02-\udc1f]}
	    {@RAN:<\udc80\udfff>}                                                                                                                                                    {[\udc80-\udfff]}
	    {@RAN:<\udca4\udfff>}                                                                                                                                                    {[\udca4-\udfff]}
	    {@RAN:<\udcbe\udfff>}                                                                                                                                                    {[\udcbe-\udfff]}
	    {@RAN:<\udd7b\udfff>}                                                                                                                                                    {[\udd7b-\udfff]}
	    {@RAN:<\udffe\udfff>}                                                                                                                                                    {[\udffe\udfff]}
	}
    }
    
    method Lexemes {} {
	debug.<Name>
	# Lexer API: Lexeme symbols (Cannot be terminal).
	return {
	    plain   1
	}
    }
    
    method Discards {} {
	debug.<Name>
	# Discarded symbols (whitespace)
	return {
	    
	}
    }
    
    method Symbols {} {
	# Non-lexeme, non-literal symbols
	debug.<Name>
	return {
	    {@^CLS:<\42\134[:control:]>}
	    {@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP}
	    {@RAN:<\udc00\udcbc>}
	    {@RAN:<\udc00\udd72>}
	    {@RAN:<\udc00\udfff>}
	}
    }

    method Rules {} {
	# Rules for all symbols but the literals
	debug.<Name>
	return {
	    {plain := {@^CLS:<\42\134[:control:]>}}
	    {{@^CLS:<\42\134[:control:]>} := {@^CLS:<\0-\37\42\134\177-\237\255\3000-\3005\3034\3335\3417\4342\14016\20013-\20017\20052-\20056\20140-\20144\20146-\20157\160000-\174377\177377\177771-\177773>.BMP}}
	    {{@^CLS:<\42\134[:control:]>} := {@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\ud82f>} {@RAN:<\udc00\udc9f>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\ud82f>} {@RAN:<\udca4\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\ud804>} {@RAN:<\udc00\udcbc>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\ud804>} {@RAN:<\udcbe\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\ud834>} {@RAN:<\udc00\udd72>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\ud834>} {@RAN:<\udd7b\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\udb40>} {@CHR:<\udc00>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\udb40>} {@RAN:<\udc02\udc1f>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\udb40>} {@RAN:<\udc80\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\udbbf>} {@RAN:<\udffe\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@CHR:<\udbff>} {@RAN:<\udffe\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@RAN:<\ud800\ud803>} {@RAN:<\udc00\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@RAN:<\ud805\ud82e>} {@RAN:<\udc00\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@RAN:<\ud830\ud833>} {@RAN:<\udc00\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@RAN:<\ud835\udb3f>} {@RAN:<\udc00\udfff>}}
	    {{@CLS:<\u10000-\u110bc\u110be-\u1bc9f\u1bca4-\u1d172\u1d17b-\ue0000\ue0002-\ue001f\ue0080-\ueffff\uffffe-\ufffff\u10fffe-\u10ffff>.SMP} := {@RAN:<\udb41\udb7f>} {@RAN:<\udc00\udfff>}}
	    {{@RAN:<\udc00\udcbc>} := RAN<d56480-d56508>}
	    {{@RAN:<\udc00\udcbc>} := {@RAN:<\udc00\udc9f>}}
	    {{@RAN:<\udc00\udd72>} := RAN<d56509-d56690>}
	    {{@RAN:<\udc00\udd72>} := {@RAN:<\udc00\udcbc>}}
	    {{@RAN:<\udc00\udfff>} := RAN<d56691-d57343>}
	    {{@RAN:<\udc00\udfff>} := {@RAN:<\udc00\udd72>}}
	}
    }

    method Semantics {} {
	debug.<Name>
	# NOTE. This is currently limited to array semantics.
	# NOTE. No support for command semantics in the lexer yet.
	return {values}
    }
}

# # ## ### ##### ######## #############
return
