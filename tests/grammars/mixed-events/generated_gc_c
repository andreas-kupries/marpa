# -*- tcl -*-
##
# This template is BSD-licensed.
# (c) 2017 Template - Andreas Kupries http://wiki.tcl.tk/andreas%20kupries
#                                     http://core.tcl.tk/akupries/
##
# (c) <Year> Grammar <Name> By <Writer>
##
##	Container for SLIF Grammar "<Name>"
##	Generated On <GenerationTime>
##		  By <Operator>
##		 Via <Tool>
##

package provide <Name> <Version>

# # ## ### ##### ######## #############
## Requisites

package require Tcl 8.5       ;# -- Foundation
package require TclOO         ;# -- Implies Tcl 8.5 requirement.
package require debug         ;# Tracing
package require debug::caller ;#
package require marpa::slif::container

# # ## ### ##### ######## #############

debug define marpa/grammar/<Name>
debug prefix marpa/grammar/<Name> {[debug caller] | }

# # ## ### ##### ######## #############

oo::class create <Name> {
    superclass marpa::slif::container

    constructor {} {
	debug.marpa/grammar/<Name>
	my deserialize {
	    event {
	        fox on
	        snafu on
	    }
	    global {
	        start A
	        inaccessible warn
	    }
	    g1 {
	        {} {
	            A { {priority B 0
	                    action {array values}
	                    assoc left
	                    mask 0} }
	        }
	        terminal {
	            B { terminal }
	        }
	        trigger {
	            A {
	                completed fox
	            }
	        }
	    }
	    lexeme {
	        action {array values}
	    }
	    l0 {
	        discard {
	            C { {priority @CHR:<c> 0} }
	        }
	        latm {
	            B 1
	        }
	        lexeme {
	            B { {priority @CHR:<a> 0} }
	        }
	        literal {
	            @CHR:<a> { {byte 97} }
	            @CHR:<c> { {byte 99} }
	        }
	        trigger {
	            C {
	                discard snafu
	            }
	        }
	    }
	}
	return
    }
}

# # ## ### ##### ######## #############
return
