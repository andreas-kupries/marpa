# -*- tcl -*-
## (c) 2017-present Andreas Kupries
# # ## ### ##### ######## ############# #####################
## Execution core for testing all kinds of marpa-based lexer engines.
## Configured by the caller with methods for
## - overall initialization and finalization
## - lexer creation and destruction
## - Result selection
#
## The methods expected to exist are
#
## * label      :: return string to name the tests
## * initialize :: global setup, for the suite
## * finalize   :: global cleanup, for the suite
## * result     :: result selection by label / base directory

## Uses the builtin parser and export::tlex to generate a lexer based
## on the rt_lex runtime (Tcl), and then uses that to test the
## runtime's behaviour with respect to the supported semantic actions.

kt check Tcl     8.5
kt check tcltest 2

kt require support debug
kt require support debug::caller
kt require support oo::util
kt require support TclOO
kt require support fileutil ;# writeFile

# # ## ### ##### ######## ############# #####################

kt source support/dirs.tcl
kt source support/grammars.tcl
kt source support/textutils.tcl

# # ## ### ##### ######## ############# #####################
## Setup dynamic parts of the testsuite
## Currently only importing the `bootstrap/marpa-tcl-slif`

exec [td]/grammars/setup.sh

# # ## ### ##### ######## ############# #####################

initialize

# # ## ### ##### ######## ############# #####################
##

incr max
test-grammar-files slif --> __ __ { incr max }
set kformat %0[string length $max]d
unset max

foreach {lexaction joiner} {
    g1length { }
    g1start  { }
    length   \n
    lhs      \n
    name     \n
    rule     \n
    start    \n
    symbol   \n
    value    \n
    values   \n
} {
    kt::sub sub-lc-[label]-$lexaction {
	kt source support/dirs.tcl
	kt source support/grammars.tcl
	kt source support/textutils.tcl
	kt source support/gen.tcl
	kt source support/lc-ops.tcl

	gen configure cl $cl ex $ex
	lex-setup $lexaction

	set k 0
	test-grammar-map slif --> id slif base {
	    incr k
	    set result $base/lexaction_${lexaction}_${suffix}
	    if {![file exists $result]} continue
	    set input [fget $slif]
	    set kd    [format $kformat $k]

	    test marpa-lexer-${label}-1.0.${kd}-${lexaction} "$label, action (($lexaction))" -body {
		LEX process-file $slif capture
		join $TRACE $joiner
	    }   -setup   setup \
		-cleanup cleanup \
		-result [viewFile $result]
	}

	lex-cleanup $lexaction

    } kformat joiner lexaction \
	label=[label] \
	suffix=[suffix] \
	cl=[gen cget cl] \
	ex=[gen cget ex]
}

# # ## ### ##### ######## ############# #####################
unset kformat lexaction joiner
finalize
return
