'\"
'\" Generated from file 'marpatcl_installer\&.man' by tcllib/doctools with format 'nroff'
'\" Copyright (c) 2015-2018 Andreas Kupries
'\" Copyright (c) 2018-present Documentation, Andreas Kupries
'\"
.TH "marpatcl_install_guide" n 1 doc "Marpa/Tcl, a binding to libmarpa"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
marpatcl_install_guide \- Marpa/Tcl - The Installer's Guide
.SH DESCRIPTION
.PP
Welcome to Marpa/Tcl, a Tcl binding to the "\fIlibmarpa\fR" parsing
engine\&.
.PP
Please read the document \fIMarpa/Tcl - Introduction to Marpa/Tcl\fR,
if you have not done so already, to get an overview of the whole system\&.
.SH AUDIENCE
This documented is targeted at anyone wishing to build MarpaTcl's
packages and application, for either themselves, or others\&.
.PP
Please read \fIMarpa/Tcl - How To Get The Sources\fR first, if that
was not done already\&. Here we assume that the sources are already
available in a directory of your choice\&.
.PP
For developers building Marpa/Tcl with the intent to extend or modify
the packages and application we additionally provide
.IP [1]
\fIMarpa/Tcl - The Developer's Guide\fR\&.
.PP
.PP
.SH REQUISITES
Before Marpa/Tcl can be build and used a number of requisites must be installed\&.
These are:
.IP [1]
Jeffrey Kegler's \fBlibmarpa\fR library\&.
For details see \fBLibmarpa\fR\&.
.IP [2]
The scripting language Tcl\&.
For details see \fBTcl\fR\&.
.IP [3]
The \fBcritcl\fR package (C embedding) for \fBTcl\fR\&.
For details see \fBCriTcl\fR\&.
.IP [4]
Various packages from the Tcllib bundles for \fBTcl\fR\&.
For details see \fBTcllib\fR\&.
.IP [5]
The \fBkettle\fR application (Build tool) for \fBTcl\fR\&.
For details see \fBKettle\fR\&.
.PP
This list assumes that the machine where Marpa/Tcl is to be installed
is essentially clean\&. Of course, if parts of the dependencies listed
below are already installed the associated steps can be skipped\&. It is
still recommended to read their sections though, to validate that the
dependencies they talk about are indeed installed\&.
.SS LIBMARPA
This C library is the foundation of Marpa/Tcl, providing the parser
engine we bind to\&.
.PP
The instructions for its installation, including the retrieval of its
sources, can be found at
\fIhttp://jeffreykegler\&.github\&.io/Marpa-web-site/libmarpa\&.html\fR\&.
.PP
As we are only interested in the library itself installation of the
\fBMarpa::R2\fR Perl binding is not necessary\&. Marpa/Tcl also
comes with its own testsuite\&.
.PP
Regarding packages for the various Linux distributions which would
make installation more convenient, I have currently only found/seen:
.TP
Ubuntu
\fBlibmarpa-r2-perl\fR is the Perl binding I mentioned
above\&. Based on the set of installed files I believe that
libmarpa is part of the shared library for the binding itself,
and not installed as a separate binary\&.
.PP
.SS TCL
As we are building a set of Tcl packages it should be pretty much
obvious that a working Tcl installation is needed, and I will not
belabor the point\&.
.PP
Out of the many use whatever you are comfortable with, as long
as it provides Tcl 8\&.5, or higher\&.
.PP
This may be a Tcl installation provided by your operating
system distribution, from a distribution-independent vendor, or built
by yourself\&.
.PP
Myself, I used \fIActiveState's\fR [http://www\&.activestate\&.com]
ActiveTcl 8\&.5 distribution during development of the binding, as I am
most familiar with it\&.
.PP
\fI(Disclosure: I, Andreas Kupries, worked for ActiveState, and maintained ActiveTcl and TclDevKit for them)\&.\fR
.PP
This distribution can be found at
\fIhttp://www\&.activestate\&.com/activetcl\fR\&. Retrieve the archive of
ActiveTcl 8\&.5 for your platform and install it as directed by
ActiveState\&.
.PP
Assuming that ActiveTcl got installed I usually run the command
.CS


    teacup update

.CE
to install all packages ActiveState provides, and the kitchensink, as
the distribution itself usually contains only the most important set
of packages\&. This ensures that the dependencies for \fBCriTcl\fR,
and Marpa/Tcl are all present, and more\&.
.PP
If that is not your liking you have to read the sections for
\fBCriTcl\fR, and Marpa/Tcl to determine the exact set of packages
required, and install only these using
.CS


    teacup install $packagename

.CE
.PP
Both \fBteacup\fR commands above assume that ActiveState's
TEApot repository at \fIhttp://teapot\&.activestate\&.com\fR is in the
list of repositories accessible to \fBteacup\fR\&. This is automatically
ensured for the ActiveTcl distribution\&. Others may have to run
.CS


    teacup archive add http://teapot\&.activestate\&.com

.CE
to make this happen\&.
.PP
For those wishing to build Tcl on their own, their sources can
be found at
.TP
Tcl
\fIhttp://core\&.tcl\&.tk/tcl/\fR
.PP
.SS CRITCL
To build Marpa/Tcl the tool \fBcritcl\fR is required\&.
.PP
Marpa/Tcl's build system (based on \fBKettle\fR) accepts it
either as an application found in the PATH (be it starkit or
starpack), or as a Tcl package available to the \fBtclsh\fR used to
run their build & installation processes\&.
.PP
Marpa/Tcl requires version 3 or higher\&.
.PP
The github repository providing releases of version 3 and
higher, and the associated sources, can be found at
\fIhttp://andreas-kupries\&.github\&.com/critcl\fR\&.
.PP
Any branch of the repository can be used (if not using the
prebuild starkit or starpack), although the use of the stable branch
\fImaster\fR is recommended\&.
.PP
At the above url is also an explanation on how to build and
install CriTcl, including a list of its dependencies\&.
.PP
Its instructions will not be repeated here\&. If there are
problems with their directions please file a bug against the critcl
project, and not Marpa/Tcl\&.
.SS TCLLIB
To use Marpa/Tcl a few packages found in the bundle Tcllib are
required\&. These packages are:
.IP [1]
debug
.IP [2]
debug::caller
.IP [3]
oo::util
.IP [4]
lambda
.IP [5]
try
.IP [6]
fileutil
.PP
.PP
Assuming that ActiveTcl is installed, or some other Tcl
installation with \fBteacup\fR available, these packages can
be installed via
.CS


    teacup install $packagename

.CE
.PP
The \fBteacup\fR command above assumes that ActiveState's
TEApot repository at \fIhttp://teapot\&.activestate\&.com\fR is in the
list of repositories accessible to \fBteacup\fR\&. This is automatically
ensured for the ActiveTcl distribution\&. Others may have to run
.CS


    teacup archive add http://teapot\&.activestate\&.com

.CE
to make this happen\&.
.PP
Now, for those wishing to install the packages from source, the
fossil repository for the bundle can be found at
\fIhttps://core\&.tcl\&.tk/tcllib\fR\&.
.PP
Releases of Tcllib can be found there as well, or
\fBfossil\fR can be used to check out specific revisions\&.
.PP
Tcllib comes with its own installation instructions\&.  These
will not be repeated here\&. If there are problems with its directions
please file a bug against the Tcllib project at the above url, and not
Marpa/Tcl\&.
.SS KETTLE
To build Marpa/Tcl the tool \fBkettle\fR is required\&.
.PP
Marpa/Tcl's build system requires it as an application found in
the PATH\&.
.PP
Marpa/Tcl requires version 1 or higher\&.
.PP
The fossil repository providing releases of this tool (and its
associated package) can be found at
\fIhttp://core\&.tcl\&.tk/akupries/kettle\fR\&.
.PP
A mirror of the repository can be found at
\fIhttps://chiselapp\&.com/user/andreas_kupries/repository/Kettle\fR\&.
.PP
Use of either releases or of the head of the main branch is
recommended\&. Usage of branches is strongly discouraged as these are
used to work on experimental features and bugfixes of the tool\&. As
such their stability is not guaranteed\&.
.PP
At the above url is also an explanation on how to build and
install Kettle, including a list of its dependencies\&.
.PP
Its instructions will not be repeated here\&. If there are
problems with their directions please file a bug against the Kettle
project, and not Marpa/Tcl\&.
.SH "BUILD & INSTALLATION INSTRUCTIONS"
.SS "BUILD & INSTALLATION (UNIX)"
This section describes the actions required to install Marpa/Tcl on
Unix systems (Linux, BSD, and related, including OS X)\&.
If you have to install Marpa/Tcl on a Windows machine see section
\fBBuild & Installation (Windows)\fR instead\&.
.PP
To install Marpa/Tcl simply run
.CS


    /path/to/tclsh8\&.5 /path/to/marpatcl/build\&.tcl install

.CE
where "\fI/path/to/tclsh8\&.5\fR" is the tclsh of your Tcl installation,
and "\fI/path/to/marpatcl\fR" the location of the Marpa/Tcl sources on
your system\&.
.PP
This builds all packages and then places them in a directory where the
\fBtclsh8\&.5\fR will find them\&.
.PP
The build system provides a small GUI for those not comfortable with
the command line\&.
This GUI is accessible by invoking "\fIbuild\&.tcl\fR" without any
arguments\&.
.PP
To get help about the methods of "\fIbuild\&.tcl\fR", and their complete
syntax, invoke "\fIbuild\&.tcl\fR" with the argument \fBhelp\fR, i\&.e\&.,
like
.CS


    /path/to/tclsh8\&.5 /path/to/marpa/tcl/build\&.tcl help

.CE
.SS "BUILD & INSTALLATION (WINDOWS)"
This section describes the actions required to install Marpa/Tcl on
Windows(tm) systems\&.
If you have to install Marpa/Tcl on a Unix machine (Linux, BSD, and
related, including OS X) see section
\fBBuild & Installation (Unix)\fR instead\&.
.PP
To install Marpa/Tcl simply run
.CS


    /path/to/tclsh8\&.5 /path/to/kettle -f /path/to/marpatcl/build\&.tcl install

.CE
where "\fI/path/to/tclsh8\&.5\fR" is the tclsh of your Tcl installation,
"\fI/path/to/kettle\fR" is the installed \fBkettle\fR application,
and "\fI/path/to/marpatcl\fR" the location of the Marpa/Tcl sources on
your system\&.
.PP
This builds all packages and then places them in a directory where the
\fBtclsh8\&.5\fR will find them\&.
.PP
The above is written without assuming any associations from
extensions (like "\fI\&.tcl\fR") to executables responsible for the files
with that extension\&.
Actually, given that "\fIbuild\&.tcl\fR" is technically a
"\fIkettle\fR"-script, which in turn is a "\fI\&.tcl\fR"-script I am not
sure if Windows is able to handle such a chain of interpreters\&.
The command given above simply spells out the entire chain\&.
.PP
The build system provides a small GUI for those not comfortable with
the command line\&.
This GUI is accessible by invoking "\fIbuild\&.tcl\fR" without any
arguments from the command line\&.
.PP
To get help about the methods of "\fIbuild\&.tcl\fR", and their complete
syntax, invoke "\fIbuild\&.tcl\fR" with the argument \fBhelp\fR, i\&.e\&.,
like
.CS


    /path/to/tclsh8\&.5 /path/to/kettle -f /path/to/marpatcl/build\&.tcl help

.CE
.SH "BUGS, IDEAS, FEEDBACK"
This document, and the package it describes, will undoubtedly contain
bugs and other problems\&.
Please report such at the
\fIMarpa/Tcl Tracker\fR [https://core\&.tcl\&.tk/akupries/marpatcl]\&.
Please also report any ideas for enhancements you may have for either
package and/or documentation\&.
.SH KEYWORDS
aycock, character classes, document processing, earley, horspool, joop leo, lexing, libmarpa, nigel horspool, parsing, regex, table parsing
.SH COPYRIGHT
.nf
Copyright (c) 2015-2018 Andreas Kupries
Copyright (c) 2018-present Documentation, Andreas Kupries

.fi